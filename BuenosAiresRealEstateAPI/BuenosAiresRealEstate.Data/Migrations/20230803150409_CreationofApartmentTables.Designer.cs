// <auto-generated />
using System;
using BuenosAiresRealEstate.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuenosAiresRealEstate.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230803150409_CreationofApartmentTables")]
    partial class CreationofApartmentTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuenosAiresRealEstate.API.Models.Models.ApartmentComplex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amenities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplexName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApartmentComplexes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Juncal 2736",
                            Amenities = "Pool, Playroom, Laundry Room",
                            ComplexName = "Juncal Suites",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1400),
                            ImageUrl = "Images\\Juncal.jpg",
                            Owner = "JM Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Guise 1784",
                            Amenities = "Playroom, Laundry Room",
                            ComplexName = "Guise Suites",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1412),
                            ImageUrl = "Images\\Guise.jpg",
                            Owner = "JM Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Address = "Beruti 3891",
                            Amenities = "Pool, Playroom",
                            ComplexName = "Beruti Tower",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1414),
                            ImageUrl = "Images\\Beruti.jpg",
                            Owner = "MH Jaunarena",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Address = "Paraguay 1800",
                            Amenities = "Pool, Laundry Room",
                            ComplexName = "Paraguay Complex",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1416),
                            ImageUrl = "Images\\Paraguay.jpg",
                            Owner = "MH Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Address = "Alcorta 1900",
                            Amenities = "Pool",
                            ComplexName = "Alcorta Palace",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1418),
                            ImageUrl = "Images\\Alcorta.jpg",
                            Owner = "OA Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Address = "Santa Fe 2000",
                            Amenities = "Playroom",
                            ComplexName = "Santa Fe Apartments",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1420),
                            ImageUrl = "Images\\SantaFe.jpg",
                            Owner = "HM Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Address = "Mansilla 1000",
                            Amenities = "",
                            ComplexName = "Mansilla Suites",
                            CreatedDate = new DateTime(2023, 8, 3, 12, 4, 9, 698, DateTimeKind.Local).AddTicks(1422),
                            ImageUrl = "Images\\Mansilla.jpg",
                            Owner = "OA Iriarte",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BuenosAiresRealEstate.API.Models.Models.ApartmentUnit", b =>
                {
                    b.Property<string>("ApartmentUnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApartmentComplexId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Details")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApartmentUnitId");

                    b.HasIndex("ApartmentComplexId");

                    b.ToTable("ApartmentUnits");
                });

            modelBuilder.Entity("BuenosAiresRealEstate.API.Models.Models.ApartmentUnit", b =>
                {
                    b.HasOne("BuenosAiresRealEstate.API.Models.Models.ApartmentComplex", "ApartmentComplex")
                        .WithMany()
                        .HasForeignKey("ApartmentComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartmentComplex");
                });
#pragma warning restore 612, 618
        }
    }
}
